-----------------IN PROGRESS-------------

-- BI_SANDBOX.SBX_BIZ.MARKETING.V_SEN_DISC_ALL_SALES_DEPT source

--CREATE OR REPLACE VIEW V_SEN_DISC_ALL_SALES_DEPT AS
SELECT   Distinct A.DEPT_KEY,
         A.SALES_DT,
         A.STORE_NBR,
         A.CARD_TYPE_CD,
         SUM(A.SALES_TY) AS SALES_TY,
         SUM(A.SALES_QTY_TY) AS SALES_QTY_TY,
         SUM(A.PROFIT_TY) AS PROFIT_TY,
         SUM(A.SALES_LY) AS SALES_LY,
         SUM(A.SALES_QTY_LY) AS SALES_QTY_LY,
         SUM(A.PROFIT_LY) AS PROFIT_LY
FROM     (

SELECT   Distinct CASE 
     WHEN (TY.DEPT_KEY IS NOT NULL) THEN TY.DEPT_KEY 
     WHEN (LY.DEPT_KEY IS NOT NULL) THEN LY.DEPT_KEY 
     ELSE NULL::INT2 
END AS DEPT_KEY,
         CASE 
              WHEN (TY.SALES_DT IS NOT NULL) THEN TY.SALES_DT 
              WHEN (LY.SALES_DT IS NOT NULL) THEN LY.SALES_DT 
              ELSE NULL 
         END AS SALES_DT,
         CASE 
              WHEN (TY.CARD_TYPE_CD_1 IS NOT NULL) THEN TY.CARD_TYPE_CD_1 
              WHEN (LY.CARD_TYPE_CD_1 IS NOT NULL) THEN LY.CARD_TYPE_CD_1 
              ELSE NULL 
         END AS CARD_TYPE_CD,
         CASE 
              WHEN (TY.STORE_NBR IS NOT NULL) THEN TY.STORE_NBR 
              WHEN (LY.STORE_NBR IS NOT NULL) THEN LY.STORE_NBR 
              ELSE NULL::INT4 
         END AS STORE_NBR,
         CASE 
              WHEN (TY.SALES = 0) THEN NULL 
              ELSE TY.SALES 
         END AS SALES_TY,
         CASE 
              WHEN (TY.SALES_QTY = 0) THEN NULL 
              ELSE TY.SALES_QTY 
         END AS SALES_QTY_TY,
         CASE 
              WHEN (TY.PROFIT = 0) THEN NULL 
              ELSE TY.PROFIT 
         END AS PROFIT_TY,
         CASE 
              WHEN (LY.SALES = 0) THEN NULL 
              ELSE LY.SALES 
         END AS SALES_LY,
         CASE 
              WHEN (LY.SALES_QTY = 0) THEN NULL 
              ELSE LY.SALES_QTY 
         END AS SALES_QTY_LY,
         CASE 
              WHEN (LY.PROFIT = 0) THEN NULL 
              ELSE LY.PROFIT 
         END AS PROFIT_LY
FROM     (

SELECT   A11.DEPT_KEY,
         D.SALES_DT,
         LINE.STORE_NBR,
         CASE 
              WHEN (A11.LOYALTY_CARD_NBR = 0) THEN 'M' 
              WHEN (LOYAL.HOUSEHOLD_KEY = 0) THEN 'M' 
              WHEN (MAN.HOUSEHOLD_KEY IS NOT NULL) THEN 'M' 
              ELSE LOYAL.CARD_TYPE_CD 
         END AS CARD_TYPE_CD_1,
         COUNT(DISTINCT A11.TRANS_NBR) AS TRANS,
         SUM(A11.TOTAL_SALES_QTY) AS SALES_QTY,
         SUM(A11.TOTAL_SALES_AMT) AS SALES,
         SUM((((A11.TOTAL_SALES_AMT - A11.EXT_COST_AMT) + A11.EXT_COST_ALLW_AMT) + A11.EXT_BILLBACK_AMT)) AS PROFIT
FROM     SBX_BIZ.MARKETING.RSAL_DY_LN_ITM_TRN A11 
         JOIN SBX_BIZ.MARKETING.LOYALTY_CARD LOYAL ON A11.LOYALTY_CARD_NBR = LOYAL.LOYALTY_CARD_NBR 
         JOIN SBX_BIZ.MARKETING.FISCAL_DAY D ON D.SALES_DT = A11.SALES_DT 
         JOIN SBX_BIZ.MARKETING.LINE LINE ON LINE.SALES_LINE_ID)::"VARCHAR" = A11.SALES_LINE_ID 
         JOIN SBX_BIZ.MARKETING.I_SENIOR_DISCOUNT_STORES STORE_GROUP ON STORE_GROUP.STORE_NBR = LINE.STORE_NBR 
         LEFT JOIN (SELECT DISTINCT M.HOUSEHOLD_KEY FROM SBX_BIZ.MARKETING.I_MANAGER_CARDS M) MAN ON ((LOYAL.HOUSEHOLD_KEY = MAN.HOUSEHOLD_KEY))
WHERE    D.SALES_DT > '2021-01-02'
AND      LINE.FORMAT_TYPE_ID = 'SUPERMKT'
GROUP BY 1, 2, 3, 4

) TY 
         FULL JOIN (


SELECT   Distinct A11.DEPT_KEY,
         D.SALES_DT,
         LINE.STORE_NBR,
         CASE 
              WHEN (A11.LOYALTY_CARD_NBR = 0) THEN 'M' 
              WHEN (LOYAL.HOUSEHOLD_KEY = 0) THEN 'M' 
              WHEN (MAN.HOUSEHOLD_KEY IS NOT NULL) THEN 'M' 
              ELSE LOYAL.CARD_TYPE_CD 
         END AS CARD_TYPE_CD_1,
         SUM(A11.TOTAL_SALES_QTY) AS SALES_QTY,
         SUM(A11.TOTAL_SALES_AMT) AS SALES,
         SUM(((A11.TOTAL_SALES_AMT - A11.EXT_COST_AMT) + A11.EXT_COST_ALLW_AMT + A11.EXT_BILLBACK_AMT) AS PROFIT FROM (((SBX_BIZ.MARKETING.RSAL_DY_LN_ITM_TRN A11 JOIN SBX_BIZ.MARKETING.LOYALTY_CARD LOYAL ON A11.LOYALTY_CARD_NBR = LOYAL.LOYALTY_CARD_NBR JOIN SBX_BIZ.MARKETING.FISCAL_DAY D ON D.LY_SALES_DT = A11.SALES_DT JOIN SBX_BIZ.MARKETING.LINE LINE ON LINE.SALES_LINE_ID = A11.SALES_LINE_ID JOIN SBX_BIZ.MARKETING.I_SENIOR_DISCOUNT_STORES STORE_GROUP ON STORE_GROUP.STORE_NBR = LINE.STORE_NBR LEFT JOIN (SELECT DISTINCT M.HOUSEHOLD_KEY FROM SBX_BIZ.MARKETING.I_MANAGER_CARDS M) MAN ON LOYAL.HOUSEHOLD_KEY = MAN.HOUSEHOLD_KEY WHERE D.SALES_DT between '2021-01-02' AND ((SELECT MAX(E.SALES_DT) AS SALES_DT FROM SBX_BIZ.MARKETING.EFIN_DAY_LN_DPT E WHERE (E.TOTAL_SALES_AMT > 0)) + 7) AND (LINE.FORMAT_TYPE_ID = 'SUPERMKT') GROUP BY 1, 2, 3,

) LY ON (((((TY.DEPT_KEY = LY.DEPT_KEY) AND (TY.SALES_DT = LY.SALES_DT)) AND (TY.STORE_NBR = LY.STORE_NBR)) AND (TY.CARD_TYPE_CD_1 = LY.CARD_TYPE_CD_1)))



) A
GROUP BY A.DEPT_KEY, A.SALES_DT, A.STORE_NBR, A.CARD_TYPE_CD;

-----------------HOLD--------------------
	SELECT
		A13.STORE_NBR AS "Store Nbr",
		A11.ITEM_ID AS "Item",
		H.MDSE_GRP_KEY AS "Group ID",
		F1.DEPT_KEY AS "Department ID",
		C1.MKTG_CHAIN_ID AS "Banner ID",
		A14.END_DT AS "Wk End Dt",
		A15.DISPLAY AS "Display",
		A15.SIDES AS "Sides",
		A15."Ad Location",
		SUM(A11.TOTAL_SALES_AMT) AS "Sales Dollars",
		SUM(CASE WHEN A11.EVENT_CD in ('ADS', 'ADW', 'BIG') THEN A11.TOTAL_SALES_AMT ELSE '0' END) AS "Sales Dollars Promo",
		SUM(CASE WHEN A11.EVENT_CD in ('PFRZ', 'RPED', 'TPRL', 'TPRN', 'TPRW', 'WVBV') THEN A11.TOTAL_SALES_AMT ELSE '0' END) AS "Sales Dollars TPR",
		SUM(A11.WHSE_MVMT_QTY) AS "Sales Quantity",
		SUM(CASE WHEN A11.EVENT_CD in ('ADS', 'ADW', 'BIG') THEN A11.WHSE_MVMT_QTY ELSE '0' END) AS "Sales Quantity Promo",
		SUM(CASE WHEN A11.EVENT_CD in ('PFRZ', 'RPED', 'TPRL', 'TPRN', 'TPRW', 'WVBV') THEN A11.WHSE_MVMT_QTY ELSE '0' END) AS "Sales Quantity TPR",
		SUM(A11.EXT_MOVEMENT_WT) AS "Sales Weight",
		SUM(CASE WHEN A11.EVENT_CD in ('ADS', 'ADW', 'BIG') THEN A11.EXT_MOVEMENT_WT ELSE '0' END) AS "Sales Weight Promo",
		SUM(CASE WHEN A11.EVENT_CD in ('PFRZ', 'RPED', 'TPRL', 'TPRN', 'TPRW', 'WVBV') THEN A11.EXT_MOVEMENT_WT ELSE '0' END) AS "Sales Weight TPR",
		SUM(A11.EXT_PROFIT_AMT) AS "Profit Dollars",
		CASE
			WHEN (ROUND(SUM(CASE WHEN ((A11.EXT_MOVEMENT_WT = '0') AND (A12.SIZE_UOM = 'EA')) THEN (A11.WHSE_MVMT_QTY * A16."Weight") 
            ELSE CASE WHEN ((A11.EXT_MOVEMENT_WT = '0') AND (A12.SIZE_UOM = 'OZ')) THEN (A11.WHSE_MVMT_QTY * (A12.SIZE_CD / 16)) 
            ELSE CASE WHEN (((A11.EXT_MOVEMENT_WT = '0') AND (A12.SIZE_UOM = 'CT')) AND (A12.SIZE_CD = 1)) THEN (A11.WHSE_MVMT_QTY * A16."Weight") 
            ELSE CASE WHEN (((A11.EXT_MOVEMENT_WT = '0') AND (A12.SIZE_UOM = 'CT')) AND (A12.SIZE_CD <> ('1'(1, 0))(1, 0))) THEN (A11.WHSE_MVMT_QTY * (A12.SIZE_CD * A16."Weight")) 
            ELSE CASE WHEN ((A11.EXT_MOVEMENT_WT = '0') AND (A12.SIZE_UOM = 'LB')) THEN (A11.WHSE_MVMT_QTY * A12.SIZE_CD) ELSE CASE WHEN ((A11.EXT_MOVEMENT_WT = '0') AND (A12.SIZE_UOM = 'PT')) THEN (A11.WHSE_MVMT_QTY * ((A12.SIZE_CD * ('12'(2, 0))(2, 0)) / ('16'(2, 0))(2, 0))) 
            ELSE A11.EXT_MOVEMENT_WT END END END END END END), 2) IS NOT NULL) 
            THEN ROUND(SUM(CASE WHEN ((A11.EXT_MOVEMENT_WT = '0') AND (A12.SIZE_UOM = 'EA')) 
            THEN (A11.WHSE_MVMT_QTY * A16."Weight") 
            ELSE CASE WHEN ((A11.EXT_MOVEMENT_WT = '0') AND (A12.SIZE_UOM = 'OZ')) THEN (A11.WHSE_MVMT_QTY * (A12.SIZE_CD / ('16'(2, 0))(2, 0))) 
            ELSE CASE WHEN (((A11.EXT_MOVEMENT_WT = '0') AND (A12.SIZE_UOM = 'CT')) AND (A12.SIZE_CD = ('1'(1, 0))(1, 0))) THEN (A11.WHSE_MVMT_QTY * A16."Weight") 
            ELSE CASE WHEN (((A11.EXT_MOVEMENT_WT = '0') AND (A12.SIZE_UOM = 'CT')) AND (A12.SIZE_CD <> ('1'(1, 0))(1, 0))) THEN (A11.WHSE_MVMT_QTY * (A12.SIZE_CD * A16."Weight")) 
            ELSE CASE WHEN ((A11.EXT_MOVEMENT_WT = '0') AND (A12.SIZE_UOM = 'LB')) THEN (A11.WHSE_MVMT_QTY * A12.SIZE_CD) 
            ELSE CASE WHEN ((A11.EXT_MOVEMENT_WT = '0') AND (A12.SIZE_UOM = 'PT')) THEN (A11.WHSE_MVMT_QTY * ((A12.SIZE_CD * ('12'(2, 0))(2, 0)) / ('16'(2, 0))(2, 0))) 
            ELSE A11.EXT_MOVEMENT_WT END END END END END END), 2)
			WHEN (0 IS NOT NULL) THEN '0'
			ELSE NULL
		END AS "Equiv Weight"
	FROM
		SBX_BIZ.MARKETING.EFIN_WK_LINE_ITEM A11
	JOIN SBX_BIZ.MARKETING.MDSE_ITEM A12 ON
		A11.ITEM_ID = A12.ITEM_ID
	JOIN SBX_BIZ.MARKETING.MDSE_CLASS B ON
		A12.MDSE_CLASS_KEY = B.MDSE_CLASS_KEY
	JOIN SBX_BIZ.MARKETING.MDSE_CATEGORY E ON
		B.MDSE_CATGY_KEY = E.MDSE_CATGY_KEY
	JOIN SBX_BIZ.MARKETING.MDSE_GROUP H ON
		E.MDSE_GRP_KEY = H.MDSE_GRP_KEY
	JOIN SBX_BIZ.MARKETING.DEPARTMENT F1 ON
		H.DEPT_KEY = F1.DEPT_KEY
	JOIN SBX_BIZ.MARKETING.LINE A13 ON
		A11.SALES_LINE_ID = A13.SALES_LINE_ID
	LEFT JOIN SBX_BIZ.MARKETING.MKTG_CHAIN C1 ON
		A13.MKTG_CHAIN_ID = C1.MKTG_CHAIN_ID
	JOIN SBX_BIZ.MARKETING.FISCAL_WEEK A14 ON
		A11.FISCAL_WEEK_ID = A14.FISCAL_WEEK_ID
	LEFT JOIN SBX_BIZ.MARKETING.V_PRODUCE_DISPLAY A15 ON
		A11.SALES_LINE_ID = A15."Store ID"
			AND A14.END_DT = A15."Date End Date"
			AND A11.ITEM_ID = A15."Item"
	LEFT JOIN ((

		SELECT
			A.ITEM_ID AS "Item",
			AP."Weight"
		FROM
			SBX_BIZ.MARKETING.MDSE_ITEM A
		JOIN SBX_BIZ.MARKETING.PRIMARY_SKU PSKU ON
			A.SKU_NBR = PSKU.SKU_NBR
		JOIN SBX_BIZ.MARKETING.I_EQUIV_WGT_AG_UPC AP ON
			PSKU.ANCHOR_PRICE_ID = AP."Anchor Group ID"
UNION (
	SELECT
		A."Item",
		A."Weight"
	FROM
		SBX_BIZ.MARKETING.I_EQUIV_WGT_UPC A)) A16 ON
		((A11.ITEM_ID = A16."Item")))
	WHERE
		(((((((A13.CUST_STATUS_KEY < 3)
			AND (A13.FORMAT_TYPE_ID <> 'WHSE'))
			AND (A13.FORMAT_TYPE_ID IN ('SUPERMKT  ')))
			AND (F1.DEPT_KEY IN (20, 110, 30, 120, 70, 80, 230, 250)))
			AND (A13.LOYALTY_STATUS_CD <> 'DUMMY'))
			AND ((A14.END_DT >= (
			SELECT
				DISTINCT (V_FISCAL_CALENDAR."Wk End Dt" - 805)
			FROM
				SBX_BIZ.MARKETING.V_FISCAL_CALENDAR
			WHERE
				((V_FISCAL_CALENDAR."Wk End Dt" >= (CURRENT_DATE() - 7))
					AND (V_FISCAL_CALENDAR."Wk End Dt" <= (CURRENT_DATE() - 1)))))
				AND (A14.END_DT <= (
				SELECT
					DISTINCT V_FISCAL_CALENDAR."Wk End Dt"
				FROM
					SBX_BIZ.MARKETING.V_FISCAL_CALENDAR
				WHERE
					((V_FISCAL_CALENDAR."Wk End Dt" >= (CURRENT_DATE() - 7))
						AND (V_FISCAL_CALENDAR."Wk End Dt" <= (CURRENT_DATE() - 1)))))))
			AND (A14.END_DT < CURRENT_DATE()))
	GROUP BY
		A13.STORE_NBR,
		A11.ITEM_ID,
		H.MDSE_GRP_KEY,
		F1.DEPT_KEY,
		C1.MKTG_CHAIN_ID,
		A14.END_DT,
		A15.DISPLAY,
		A15.SIDES,
		A15."Ad Location"
;
--------------------HOLD 2-------------------------

SELECT
	CASE
		WHEN (A."Store Nbr" IS NOT NULL) THEN A."Store Nbr"
		WHEN (B."Store Nbr" IS NOT NULL) THEN B."Store Nbr"
		WHEN (C."Store Nbr" IS NOT NULL) THEN C."Store Nbr"
		ELSE NULL
	END AS "Store Nbr",
	CASE
		WHEN (A."Wk End Dt" IS NOT NULL) THEN A."Wk End Dt"
		WHEN (B."Wk End Dt" IS NOT NULL) THEN B."Wk End Dt"
		WHEN (C."Wk End Dt" IS NOT NULL) THEN C."Wk End Dt"
		ELSE NULL
	END AS "Wk End Dt",
	CASE
		WHEN (A."Item" IS NOT NULL) THEN A."Item"
		WHEN (B."Item" IS NOT NULL) THEN B."Item"
		WHEN (C."Item" IS NOT NULL) THEN C."Item"
		ELSE NULL
	END AS "Item",
	CASE
		WHEN (A."Group ID" IS NOT NULL) THEN A."Group ID"
		WHEN (B."Group ID" IS NOT NULL) THEN B."Group ID"
		WHEN (C."Group ID" IS NOT NULL) THEN C."Group ID"
		ELSE NULL
	END AS "Group ID",
	CASE
		WHEN (A."Department ID" IS NOT NULL) THEN A."Department ID"
		WHEN (B."Department ID" IS NOT NULL) THEN B."Department ID"
		WHEN (C."Department ID" IS NOT NULL) THEN C."Department ID"
		ELSE NULL
	END AS "Department ID",
	CASE
		WHEN (A."Banner ID" IS NOT NULL) THEN A."Banner ID"
		WHEN (B."Banner ID" IS NOT NULL) THEN B."Banner ID"
		WHEN (C."Banner ID" IS NOT NULL) THEN C."Banner ID"
		ELSE NULL
	END AS "Banner ID",
	CASE
		WHEN (A."Display" IS NOT NULL) THEN A."Display"
		WHEN ('' IS NOT NULL) THEN ''
		ELSE NULL
	END AS "Display",
	CASE
		WHEN (A."Sides" IS NOT NULL) THEN A."Sides"
		WHEN ('' IS NOT NULL) THEN ''
		ELSE NULL
	END AS "Sides",
	CASE
		WHEN (A."Ad Location" IS NOT NULL) THEN A."Ad Location"
		WHEN ('' IS NOT NULL) THEN ''
		ELSE NULL
	END AS "Ad Location",
	CASE
		WHEN (A."Sales Dollars" IS NOT NULL) THEN A."Sales Dollars"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Sales Dollars",
	CASE
		WHEN (A."Sales Dollars Promo" IS NOT NULL) THEN A."Sales Dollars Promo"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Sales Dollars Promo",
	CASE
		WHEN (A."Sales Dollars TPR" IS NOT NULL) THEN A."Sales Dollars TPR"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Sales Dollars TPR",
	CASE
		WHEN (A."Sales Quantity" IS NOT NULL) THEN A."Sales Quantity"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Sales Quantity",
	CASE
		WHEN (A."Sales Quantity Promo" IS NOT NULL) THEN A."Sales Quantity Promo"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Sales Quantity Promo",
	CASE
		WHEN (A."Sales Quantity TPR" IS NOT NULL) THEN A."Sales Quantity TPR"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Sales Quantity TPR",
	CASE
		WHEN (A."Sales Weight" IS NOT NULL) THEN A."Sales Weight"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Sales Weight",
	CASE
		WHEN (A."Sales Weight Promo" IS NOT NULL) THEN A."Sales Weight Promo"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Sales Weight Promo",
	CASE
		WHEN (A."Sales Weight TPR" IS NOT NULL) THEN A."Sales Weight TPR"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Sales Weight TPR",
	CASE
		WHEN (A."Profit Dollars" IS NOT NULL) THEN A."Profit Dollars"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Profit Dollars",
	CASE
		WHEN (B."Shrink Dollars" IS NOT NULL) THEN B."Shrink Dollars"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Shrink Dollars",
	CASE
		WHEN (C."Shipped Cases" IS NOT NULL) THEN C."Shipped Cases"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Shipped Cases",
	CASE
		WHEN (C."Order Cases" IS NOT NULL) THEN C."Order Cases"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Order Cases",
	CASE
		WHEN (A."Equiv Weight" IS NOT NULL) THEN A."Equiv Weight"
		WHEN (0 IS NOT NULL) THEN '0'
		ELSE NULL
	END AS "Equiv Weight"
FROM
	() A
		
FULL JOIN (
	SELECT
		E.STORE_NBR AS "Store Nbr",
		F.ITEM_ID AS "Item",
		H.MDSE_GRP_KEY AS "Group ID",
		F1.DEPT_KEY AS "Department ID",
		C1.MKTG_CHAIN_ID AS "Banner ID",
		D.END_DT AS "Wk End Dt",
		SUM(A.DISCOUNT_AMT) AS "Shrink Dollars"
	FROM
		((((((((((SBX_BIZ.MARKETING.MKDN_DAY_LN_ITM_RD A
	JOIN SBX_BIZ.MARKETING.MKDN_REASON_CODE B ON
		((A.REASON_CD = B.REASON_CD)))
	JOIN SBX_BIZ.MARKETING.FISCAL_DAY C ON
		((A.SALES_DT = C.SALES_DT)))
	JOIN SBX_BIZ.MARKETING.FISCAL_WEEK D ON
		((C.FISCAL_WEEK_ID = D.FISCAL_WEEK_ID)))
	JOIN SBX_BIZ.MARKETING.LINE E ON
		((A.SALES_LINE_ID = E.SALES_LINE_ID)))
	JOIN SBX_BIZ.MARKETING.MDSE_ITEM F ON
		((A.ITEM_ID = F.ITEM_ID)))
	JOIN SBX_BIZ.MARKETING.MDSE_CLASS B1 ON
		((F.MDSE_CLASS_KEY = B1.MDSE_CLASS_KEY)))
	JOIN SBX_BIZ.MARKETING.MDSE_CATEGORY E1 ON
		((B1.MDSE_CATGY_KEY = E1.MDSE_CATGY_KEY)))
	JOIN SBX_BIZ.MARKETING.MDSE_GROUP H ON
		((E1.MDSE_GRP_KEY = H.MDSE_GRP_KEY)))
	JOIN SBX_BIZ.MARKETING.DEPARTMENT F1 ON
		((H.DEPT_KEY = F1.DEPT_KEY)))
	LEFT JOIN SBX_BIZ.MARKETING.MKTG_CHAIN C1 ON
		((E.MKTG_CHAIN_ID = C1.MKTG_CHAIN_ID)))
	WHERE
		(((((D.END_DT >= (
		SELECT
			DISTINCT (V_FISCAL_CALENDAR."Wk End Dt" - 805)
		FROM
			SBX_BIZ.MARKETING.V_FISCAL_CALENDAR
		WHERE
			((V_FISCAL_CALENDAR."Wk End Dt" >= (CURRENT_DATE() - 7))
				AND (V_FISCAL_CALENDAR."Wk End Dt" <= (CURRENT_DATE() - 1)))))
			AND (D.END_DT <= (
			SELECT
				DISTINCT V_FISCAL_CALENDAR."Wk End Dt"
			FROM
				SBX_BIZ.MARKETING.V_FISCAL_CALENDAR
			WHERE
				((V_FISCAL_CALENDAR."Wk End Dt" >= (CURRENT_DATE() - 7))
					AND (V_FISCAL_CALENDAR."Wk End Dt" <= (CURRENT_DATE() - 1))))))
			AND (D.END_DT < CURRENT_DATE()))
			AND (F1.DEPT_KEY IN (20, 110, 30, 120, 70, 80, 230, 250)))
			AND (F.ITEM_ID NOT IN ('22995000000'::INT8, '22996600000'::INT8, '22996700000'::INT8, '22996800000'::INT8, '22997600000'::INT8, '22997700000'::INT8, '22996200000'::INT8, '22996300000'::INT8, '22996900000'::INT8, '22997200000'::INT8, '22997300000'::INT8, '22997400000'::INT8)))
	GROUP BY
		E.STORE_NBR,
		F.ITEM_ID,
		H.MDSE_GRP_KEY,
		F1.DEPT_KEY,
		C1.MKTG_CHAIN_ID,
		D.END_DT) B ON
	((((A."Store Nbr" = B."Store Nbr")
		AND (A."Item" = B."Item"))
		AND (A."Wk End Dt" = B."Wk End Dt")))
FULL JOIN (
	SELECT
		A12.CUSTOMER_NBR AS "Store Nbr",
		A13.UNIT_UPC_NBR AS "Item",
		A18.MDSE_GRP_KEY AS "Group ID",
		F1.DEPT_KEY AS "Department ID",
		A15.END_DT AS "Wk End Dt",
		C1.MKTG_CHAIN_ID AS "Banner ID",
		SUM(A11.SHIPPED_QTY) AS "Shipped Cases",
		SUM(A11.ORDERED_QTY) AS "Order Cases"
	FROM
		((((((((((SBX_BIZ.MARKETING.DC_SALES_HST A11
	JOIN SBX_BIZ.MARKETING.DC_CUSTOMER A12 ON
		(((A11.CUSTOMER_NBR = A12.CUSTOMER_NBR)
			AND (A11.FACILITY_ID = A12.FACILITY_ID))))
	JOIN SBX_BIZ.MARKETING.DC_ITEM A13 ON
		(((A11.FACILITY_ID = A13.FACILITY_ID)
			AND (A11.ITEM_NBR = A13.ITEM_NBR))))
	JOIN SBX_BIZ.MARKETING.FISCAL_DAY A14 ON
		((A11.TRANSACTION_DATE = A14.SALES_DT)))
	JOIN SBX_BIZ.MARKETING.FISCAL_WEEK A15 ON
		((A14.FISCAL_WEEK_ID = A15.FISCAL_WEEK_ID)))
	JOIN SBX_BIZ.MARKETING.MDSE_CLASS A16 ON
		((A13.MDSE_CLASS_KEY = A16.MDSE_CLASS_KEY)))
	JOIN SBX_BIZ.MARKETING.MDSE_CATEGORY A17 ON
		((A16.MDSE_CATGY_KEY = A17.MDSE_CATGY_KEY)))
	JOIN SBX_BIZ.MARKETING.MDSE_GROUP A18 ON
		((A17.MDSE_GRP_KEY = A18.MDSE_GRP_KEY)))
	JOIN SBX_BIZ.MARKETING.DEPARTMENT F1 ON
		((A18.DEPT_KEY = F1.DEPT_KEY)))
	JOIN SBX_BIZ.MARKETING.LINE A19 ON
		((A19.STORE_NBR = A12.CUSTOMER_NBR)))
	LEFT JOIN SBX_BIZ.MARKETING.MKTG_CHAIN C1 ON
		((A19.MKTG_CHAIN_ID = C1.MKTG_CHAIN_ID)))
	WHERE
		((((A15.END_DT >= (
		SELECT
			DISTINCT (V_FISCAL_CALENDAR."Wk End Dt" - 805)
		FROM
			SBX_BIZ.MARKETING.V_FISCAL_CALENDAR
		WHERE
			((V_FISCAL_CALENDAR."Wk End Dt" >= (CURRENT_DATE() - 7))
				AND (V_FISCAL_CALENDAR."Wk End Dt" <= (CURRENT_DATE() - 1)))))
			AND (A15.END_DT <= (
			SELECT
				DISTINCT V_FISCAL_CALENDAR."Wk End Dt"
			FROM
				SBX_BIZ.MARKETING.V_FISCAL_CALENDAR
			WHERE
				((V_FISCAL_CALENDAR."Wk End Dt" >= (CURRENT_DATE() - 7))
					AND (V_FISCAL_CALENDAR."Wk End Dt" <= (CURRENT_DATE() - 1))))))
			AND (A15.END_DT < CURRENT_DATE()))
			AND (A18.DEPT_KEY IN (20, 110, 30, 120, 70, 80, 230, 250)))
	GROUP BY
		A12.CUSTOMER_NBR,
		A13.UNIT_UPC_NBR,
		A18.MDSE_GRP_KEY,
		F1.DEPT_KEY,
		C1.MKTG_CHAIN_ID,
		A15.END_DT) C ON
	((((CASE
		WHEN (A."Store Nbr" IS NOT NULL) THEN A."Store Nbr"
		WHEN (B."Store Nbr" IS NOT NULL) THEN B."Store Nbr"
		ELSE NULL
	END = C."Store Nbr")
		AND ((CASE
			WHEN (A."Item" IS NOT NULL) THEN A."Item"
			WHEN (B."Item" IS NOT NULL) THEN B."Item"
			ELSE NULL::INT8
		END) = C."Item"))
		AND (CASE
			WHEN (A."Wk End Dt" IS NOT NULL) THEN A."Wk End Dt"
			WHEN (B."Wk End Dt" IS NOT NULL) THEN B."Wk End Dt"
			ELSE NULL
		END = C."Wk End Dt")))
;