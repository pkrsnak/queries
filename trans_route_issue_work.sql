(SELECT   SITEID,
         ROUTEID,
         'YES' ROUTE_COUNTED
FROM     (

SELECT   crh.ROUTE_END_TIME,
         crh.SITEID,
         crh.ROUTEID,
         tac.ACCT_CTGY_CD,
         count(*) num_stops
FROM     TRANSPORT.T_TMS_COM_ROUTE_HISTORY crh 
         left outer join TRANSPORT.T_TRA_ACT_ACCOUNTS ta on crh.REG_ENTITY_ID = ta.REG_ENTITY_ID and crh.ACCT_ENTITY_ID = ta.ACCT_ENTITY_ID 
         left outer join TRANSPORT.T_TRA_ACT_ACCOUNTS_CATEGORY tac on tac.REG_ENTITY_ID = ta.REG_ENTITY_ID and tac.ACCT_CTGY_ENTITY_ID = ta.ACCT_CTGY_ENTITY_ID
WHERE    crh.ROUTE_END_TIME between DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))+6) DAYS AND DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))-0) DAYS
AND      crh.STATUS = 'COMPLETE'
GROUP BY crh.ROUTE_END_TIME, crh.SITEID, crh.ROUTEID, tac.ACCT_CTGY_CD
HAVING   tac.ACCT_CTGY_CD not in ('NFCBH', 'MDVBH', 'NFCFHC', 'MDVFHC', 'DC')

)
GROUP BY SITEID, ROUTEID) z
;


(SELECT SITEID, ROUTEID, 'YES' ROUTE_COUNTED FROM ( SELECT crh.ROUTE_START_TIME, crh.SITEID, crh.ROUTEID, tac.ACCT_CTGY_CD, count(*) num_stops FROM transport.T_TMS_COM_ROUTE_HISTORY crh left outer join transport.T_TRA_ACT_ACCOUNTS ta on crh.REG_ENTITY_ID = ta.REG_ENTITY_ID and crh.ACCT_ENTITY_ID = ta.ACCT_ENTITY_ID left outer join transport.T_TRA_ACT_ACCOUNTS_CATEGORY tac on tac.REG_ENTITY_ID = ta.REG_ENTITY_ID and tac.ACCT_CTGY_ENTITY_ID = ta.ACCT_CTGY_ENTITY_ID WHERE (crh.SITEID, crh.ROUTEID) in (SELECT SITEID, ROUTEID FROM transport.T_TMS_COM_ROUTE_HISTORY WHERE SITEID in (1, 58) AND STOP_TYPE = 'DC' AND STATUS = 'COMPLETE' GROUP BY SITEID, ROUTEID HAVING max(arrive_time) between DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))+6) DAYS AND DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))-0) DAYS) GROUP BY crh.ROUTE_START_TIME, crh.SITEID, crh.ROUTEID, tac.ACCT_CTGY_CD HAVING tac.ACCT_CTGY_CD not in ('NFCBH', 'MDVBH', 'NFCFHC', 'MDVFHC', 'DC') ) GROUP BY SITEID, ROUTEID) z
;


(SELECT SITEID, ROUTEID, 'YES' ROUTE_COUNTED FROM ( SELECT crh.ROUTE_END_TIME, crh.SITEID, crh.ROUTEID, tac.ACCT_CTGY_CD, count(*) num_stops FROM TRANSPORT.T_TMS_COM_ROUTE_HISTORY crh left outer join TRANSPORT.T_TRA_ACT_ACCOUNTS ta on crh.REG_ENTITY_ID = ta.REG_ENTITY_ID and crh.ACCT_ENTITY_ID = ta.ACCT_ENTITY_ID left outer join TRANSPORT.T_TRA_ACT_ACCOUNTS_CATEGORY tac on tac.REG_ENTITY_ID = ta.REG_ENTITY_ID and tac.ACCT_CTGY_ENTITY_ID = ta.ACCT_CTGY_ENTITY_ID WHERE crh.ROUTE_END_TIME between DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))+6) DAYS AND DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))-0) DAYS AND crh.STATUS = 'COMPLETE' GROUP BY crh.ROUTE_END_TIME, crh.SITEID, crh.ROUTEID, tac.ACCT_CTGY_CD HAVING tac.ACCT_CTGY_CD not in ('NFCBH', 'MDVBH', 'NFCFHC', 'MDVFHC', 'DC') ) GROUP BY SITEID, ROUTEID) z
;

--transportation KPIs TOTAL ROUTES ONLY
--source:  CRM
SELECT   'distribution' SCORECARD_TYPE,
         dx.ENTERPRISE_KEY + case when (crh.SITEID = 29 and x.ACCT_CTGY_CD = 'DG') then 0 when (crh.SITEID = 33 and x.ACCT_CTGY_CD = 'DG') then 0 else 1 end DIVISION_ID,
         'routes_total' KPI_TYPE,
         'F' DATA_GRANULARITY,
         'W' TIME_GRANULARITY,
         DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))-0) DAYS KPI_DATE,
         case when (crh.SITEID = 29 and x.ACCT_CTGY_CD = 'DG') then 90 when (crh.SITEID = 33 and x.ACCT_CTGY_CD = 'DG')
         then 80 when (crh.SITEID = 95) then 40 when (crh.SITEID = 9) then 40 else crh.SITEID end KPI_KEY_VALUE,
         count(distinct crh.ROUTEID) KPI_DATA_VALUE
FROM     transport.T_TMS_COM_ROUTE_HISTORY crh
         inner join crmadmin.T_WHSE_DIV_XREF dx on crh.SITEID = dx.SWAT_ID
         left outer join
 
(SELECT distinct crh.ROUTE_END_TIME, crh.SITEID, crh.ROUTEID, tac.ACCT_CTGY_CD FROM TRANSPORT.T_TMS_COM_ROUTE_HISTORY crh inner join TRANSPORT.T_TRA_ACT_ACCOUNTS ta on crh.REG_ENTITY_ID = ta.REG_ENTITY_ID and crh.ACCT_ENTITY_ID = ta.ACCT_ENTITY_ID inner join TRANSPORT.T_TRA_ACT_ACCOUNTS_CATEGORY tac on tac.REG_ENTITY_ID = ta.REG_ENTITY_ID and tac.ACCT_CTGY_ENTITY_ID = ta.ACCT_CTGY_ENTITY_ID WHERE tac.ACCT_CTGY_CD = 'DG' AND crh.ROUTE_END_TIME between '2020-09-05' and '2020-09-12' AND crh.STATUS = 'COMPLETE' AND crh.SITEID in (29,33)) x on crh.ROUTE_END_TIME =x.ROUTE_END_TIME and crh.SITEID = x.SITEID and crh.ROUTEID = x.ROUTEID

inner join
(SELECT SITEID, ROUTEID, 'YES' ROUTE_COUNTED FROM ( SELECT crh.ROUTE_END_TIME, crh.SITEID, crh.ROUTEID, tac.ACCT_CTGY_CD, count(*) num_stops FROM TRANSPORT.T_TMS_COM_ROUTE_HISTORY crh left outer join TRANSPORT.T_TRA_ACT_ACCOUNTS ta on crh.REG_ENTITY_ID = ta.REG_ENTITY_ID and crh.ACCT_ENTITY_ID = ta.ACCT_ENTITY_ID left outer join TRANSPORT.T_TRA_ACT_ACCOUNTS_CATEGORY tac on tac.REG_ENTITY_ID = ta.REG_ENTITY_ID and tac.ACCT_CTGY_ENTITY_ID = ta.ACCT_CTGY_ENTITY_ID WHERE crh.ROUTE_END_TIME between DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))+6) DAYS AND DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))-0) DAYS AND crh.STATUS = 'COMPLETE' GROUP BY crh.ROUTE_END_TIME, crh.SITEID, crh.ROUTEID, tac.ACCT_CTGY_CD HAVING tac.ACCT_CTGY_CD not in ('NFCBH', 'MDVBH', 'NFCFHC', 'MDVFHC', 'DC') ) GROUP BY SITEID, ROUTEID) z on crh.SITEID = z.SITEID and crh.ROUTEID = z.ROUTEID

left outer join

(SELECT distinct crh.ROUTE_END_TIME,
         crh.SITEID,
         crh.ROUTEID, crh.REG_ENTITY_ID, crh.ACCT_ENTITY_ID,
         tac.ACCT_CTGY_CD
FROM     transport.T_TMS_COM_ROUTE_HISTORY crh
         inner join transport.T_TRA_ACT_ACCOUNTS ta on crh.REG_ENTITY_ID = ta.REG_ENTITY_ID and crh.ACCT_ENTITY_ID = ta.ACCT_ENTITY_ID
         inner join transport.T_TRA_ACT_ACCOUNTS_CATEGORY tac on tac.REG_ENTITY_ID = ta.REG_ENTITY_ID and tac.ACCT_CTGY_ENTITY_ID = ta.ACCT_CTGY_ENTITY_ID
WHERE    tac.ACCT_CTGY_CD in ('NFCBH', 'MDVBH', 'NFCFHC', 'MDVFHC')
AND      crh.ROUTE_END_TIME between DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))+6) DAYS AND DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))-0) DAYS
AND      crh.STATUS = 'COMPLETE') y on crh.ROUTE_END_TIME = y.ROUTE_END_TIME and crh.SITEID = y.SITEID and crh.ROUTEID = y.ROUTEID and crh.REG_ENTITY_ID = y.REG_ENTITY_ID and crh.ACCT_ENTITY_ID = y.ACCT_ENTITY_ID
WHERE    crh.ROUTE_END_TIME between DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))+6) DAYS AND DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))-0) DAYS
AND      crh.STATUS = 'COMPLETE'
AND      crh.SITEID not in (1,58)
GROUP BY dx.ENTERPRISE_KEY + case when (crh.SITEID = 29 and x.ACCT_CTGY_CD = 'DG') then 0 when (crh.SITEID = 33 and x.ACCT_CTGY_CD = 'DG') then 0 else 1 end,
         case when (crh.SITEID = 29 and x.ACCT_CTGY_CD = 'DG') then 90 when (crh.SITEID = 33 and x.ACCT_CTGY_CD = 'DG') then 80 when (crh.SITEID = 95) then 40 when (crh.SITEID = 9) then 40 else crh.SITEID end --, crh.ROUTEID, crh.STOP_NUMBER, crh.ACCT_ENTITY_ID, crh.REG_ENTITY_ID, y.ACCT_CTGY_CD, crh.CUBE, crh.ROUTED_CUBE
 
union all
 
SELECT   'distribution' SCORECARD_TYPE,
         (dx.ENTERPRISE_KEY + 1) DIVISION_ID,
         'routes_total' KPI_TYPE, 
--         'routes_late_dock_out' KPI_TYPE,
--         'miles_total' KPI_TYPE,
--         'miles_planned' KPI_TYPE,
--         'cube_total' KPI_TYPE,
         'F' DATA_GRANULARITY,
         'W' TIME_GRANULARITY,
         DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))-0) DAYS KPI_DATE,
         crh.SITEID KPI_KEY_VALUE,
         count(distinct crh.ROUTEID) KPI_DATA_VALUE
--         sum(case when crh.STOP_NUMBER = 0 and crh.DEPART_TIME > crh.DISPATCHED_DEPARTTIME_PLAN then 1 else 0 end) KPI_DATA_VALUE_LATE_DOCKOUT,
--         sum(crh.DISTANCE) KPI_DATA_VALUE_TOTAL_MILES,
--         sum(crh.DISPATCHED_DISTANCE_PLAN) KPI_DATA_VALUE_PLANNED_MILES,
--         sum(case when date(crh.ROUTE_END_TIME) <= '2020-09-12' then case when y.ACCT_CTGY_CD is null then crh.ROUTED_CUBE else 0 end else case when y.ACCT_CTGY_CD is null then crh.CUBE else 0 end end) KPI_DATA_VALUE_TOTAL_CUBE
FROM     transport.T_TMS_COM_ROUTE_HISTORY crh
         inner join crmadmin.T_WHSE_DIV_XREF dx on crh.SITEID = dx.SWAT_ID
         left outer join (SELECT distinct crh.ROUTE_START_TIME,
         crh.SITEID,
        crh.ROUTEID, crh.REG_ENTITY_ID, crh.ACCT_ENTITY_ID,
         tac.ACCT_CTGY_CD
FROM     transport.T_TMS_COM_ROUTE_HISTORY crh
         inner join transport.T_TRA_ACT_ACCOUNTS ta on crh.REG_ENTITY_ID = ta.REG_ENTITY_ID and crh.ACCT_ENTITY_ID = ta.ACCT_ENTITY_ID
         inner join transport.T_TRA_ACT_ACCOUNTS_CATEGORY tac on tac.REG_ENTITY_ID = ta.REG_ENTITY_ID and tac.ACCT_CTGY_ENTITY_ID = ta.ACCT_CTGY_ENTITY_ID
WHERE    tac.ACCT_CTGY_CD in ('NFCBH', 'MDVBH', 'NFCFHC', 'MDVFHC')
AND (crh.SITEID, crh.ROUTEID) in (SELECT SITEID, ROUTEID FROM transport.T_TMS_COM_ROUTE_HISTORY WHERE SITEID in (1, 58) AND STOP_TYPE = 'DC' AND STATUS = 'COMPLETE' GROUP BY SITEID, ROUTEID HAVING max(arrive_time) between DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))+6) DAYS AND DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))-0) DAYS)
) y on crh.ROUTE_START_TIME = y.ROUTE_START_TIME and crh.SITEID = y.SITEID and crh.ROUTEID = y.ROUTEID and crh.REG_ENTITY_ID = y.REG_ENTITY_ID and crh.ACCT_ENTITY_ID = y.ACCT_ENTITY_ID

inner join

(SELECT SITEID, ROUTEID, 'YES' ROUTE_COUNTED FROM ( SELECT crh.ROUTE_START_TIME, crh.SITEID, crh.ROUTEID, tac.ACCT_CTGY_CD, count(*) num_stops FROM transport.T_TMS_COM_ROUTE_HISTORY crh left outer join transport.T_TRA_ACT_ACCOUNTS ta on crh.REG_ENTITY_ID = ta.REG_ENTITY_ID and crh.ACCT_ENTITY_ID = ta.ACCT_ENTITY_ID left outer join transport.T_TRA_ACT_ACCOUNTS_CATEGORY tac on tac.REG_ENTITY_ID = ta.REG_ENTITY_ID and tac.ACCT_CTGY_ENTITY_ID = ta.ACCT_CTGY_ENTITY_ID WHERE (crh.SITEID, crh.ROUTEID) in (SELECT SITEID, ROUTEID FROM transport.T_TMS_COM_ROUTE_HISTORY WHERE SITEID in (1, 58) AND STOP_TYPE = 'DC' AND STATUS = 'COMPLETE' GROUP BY SITEID, ROUTEID HAVING max(arrive_time) between DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))+6) DAYS AND DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))-0) DAYS) GROUP BY crh.ROUTE_START_TIME, crh.SITEID, crh.ROUTEID, tac.ACCT_CTGY_CD HAVING tac.ACCT_CTGY_CD not in ('NFCBH', 'MDVBH', 'NFCFHC', 'MDVFHC', 'DC') ) GROUP BY SITEID, ROUTEID) z on crh.SITEID = z.SITEID and crh.ROUTEID = z.ROUTEID

WHERE (crh.SITEID, crh.ROUTEID) in (SELECT SITEID, ROUTEID FROM transport.T_TMS_COM_ROUTE_HISTORY WHERE SITEID in (1, 58) AND STOP_TYPE = 'DC' AND STATUS = 'COMPLETE' GROUP BY SITEID, ROUTEID HAVING max(arrive_time) between DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))+6) DAYS AND DATE('2020-10-18') - (DAYOFWEEK(DATE('2020-10-18'))-0) DAYS)  
GROUP BY dx.ENTERPRISE_KEY +  1, crh.SITEID 
;